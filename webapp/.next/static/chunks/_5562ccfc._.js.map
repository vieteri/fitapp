{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ai/table-renderer.tsx"],"sourcesContent":["import React from 'react';\n\n// Simple markdown parser for basic formatting\nconst parseMarkdown = (text: string): React.ReactNode => {\n  if (!text) return text;\n  \n  // Handle line breaks first\n  const lines = text.split('\\n');\n  \n  return lines.map((line, lineIndex) => {\n    // Check for list items\n    if (line.trim().match(/^[-*+]\\s/)) {\n      return (\n        <div key={lineIndex} className=\"flex items-start gap-2 mb-1\">\n          <span className=\"text-gray-500 mt-1\">•</span>\n          <span>{parseInlineMarkdown(line.replace(/^[-*+]\\s/, ''))}</span>\n        </div>\n      );\n    }\n    \n    // Check for numbered lists\n    if (line.trim().match(/^\\d+\\.\\s/)) {\n      const number = line.trim().match(/^(\\d+)\\./)?.[1];\n      return (\n        <div key={lineIndex} className=\"flex items-start gap-2 mb-1\">\n          <span className=\"text-gray-500 mt-1 min-w-[20px]\">{number}.</span>\n          <span>{parseInlineMarkdown(line.replace(/^\\d+\\.\\s/, ''))}</span>\n        </div>\n      );\n    }\n    \n    // Regular line\n    return (\n      <div key={lineIndex} className={lineIndex > 0 ? \"mt-2\" : \"\"}>\n        {parseInlineMarkdown(line)}\n      </div>\n    );\n  });\n};\n\n// Parse inline markdown formatting\nconst parseInlineMarkdown = (text: string): React.ReactNode => {\n  if (!text) return text;\n  \n  // Split by markdown patterns while preserving the delimiters\n  const parts = text.split(/(\\*\\*.*?\\*\\*|\\*.*?\\*|`.*?`|~~.*?~~|__.*?__|_.*?_)/g);\n  \n  return parts.map((part, index) => {\n    // Bold text **text** or __text__\n    if ((part.startsWith('**') && part.endsWith('**')) || \n        (part.startsWith('__') && part.endsWith('__'))) {\n      return <strong key={index} className=\"font-semibold\">{part.slice(2, -2)}</strong>;\n    }\n    // Italic text *text* or _text_\n    if ((part.startsWith('*') && part.endsWith('*') && !part.startsWith('**')) ||\n        (part.startsWith('_') && part.endsWith('_') && !part.startsWith('__'))) {\n      return <em key={index} className=\"italic\">{part.slice(1, -1)}</em>;\n    }\n    // Inline code `text`\n    if (part.startsWith('`') && part.endsWith('`')) {\n      return (\n        <code \n          key={index} \n          className=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono text-blue-600 dark:text-blue-400\"\n        >\n          {part.slice(1, -1)}\n        </code>\n      );\n    }\n    // Strikethrough ~~text~~\n    if (part.startsWith('~~') && part.endsWith('~~')) {\n      return <del key={index} className=\"line-through\">{part.slice(2, -2)}</del>;\n    }\n    // Regular text\n    return part;\n  });\n};\n\ninterface TableRendererProps {\n  content: string;\n}\n\nexport function TableRenderer({ content }: TableRendererProps) {\n  console.log('TableRenderer received content:', content);\n  \n  const renderContent = (text: string) => {\n    // Split content into blocks (paragraphs and tables)\n    const blocks = text.split(/\\n\\s*\\n/);\n    console.log('Split into blocks:', blocks);\n    \n    return blocks.map((block, blockIndex) => {\n      // Check if block contains a table (has pipe characters)\n      const lines = block.trim().split('\\n');\n              const hasTableStructure = lines.filter(line => line.includes('|')).length >= 2;\n        console.log('Block', blockIndex, 'has table structure:', hasTableStructure, 'lines:', lines);\n        \n        if (hasTableStructure && lines.length >= 2) {\n          console.log('Rendering table for block', blockIndex);\n          return renderTable(block, blockIndex);\n      } else {\n        // Regular text block\n        return (\n          <div key={blockIndex} className=\"mb-4\">\n            {parseMarkdown(block)}\n          </div>\n        );\n      }\n    });\n  };\n\n  const renderTable = (tableBlock: string, blockIndex: number) => {\n    const lines = tableBlock.trim().split('\\n').filter(line => line.trim());\n    \n    // Find header line (first line with |)\n    let headerIndex = lines.findIndex(line => line.includes('|'));\n    if (headerIndex === -1) return null;\n    \n    // Find separator line (line with dashes) - if it exists\n    let separatorIndex = lines.findIndex((line, index) => \n      index > headerIndex && line.includes('-') && line.includes('|')\n    );\n    \n    let dataLines: string[];\n    if (separatorIndex === -1) {\n      // No separator found, treat all lines except first as data\n      dataLines = lines.slice(headerIndex + 1).filter(line => line.includes('|'));\n    } else {\n      // Separator found, data is after separator\n      dataLines = lines.slice(separatorIndex + 1).filter(line => line.includes('|'));\n    }\n    \n    const headerLine = lines[headerIndex];\n    \n    // Parse header\n    const headers = headerLine\n      .split('|')\n      .map(cell => cell.trim())\n      .filter(cell => cell.length > 0);\n    \n    // Parse data rows\n    const rows = dataLines.map(line => \n      line.split('|')\n        .map(cell => cell.trim())\n        .filter(cell => cell.length > 0)\n    );\n    \n    if (headers.length === 0) return null;\n    \n    return (\n      <div key={blockIndex} className=\"mb-6\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full border border-gray-300 dark:border-gray-600 rounded-lg\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                {headers.map((header, index) => (\n                  <th\n                    key={index}\n                    className=\"px-4 py-3 text-left text-sm font-medium text-gray-900 dark:text-gray-100 border-b border-gray-300 dark:border-gray-600\"\n                  >\n                    {parseInlineMarkdown(header)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n              {rows.map((row, rowIndex) => (\n                <tr key={rowIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                  {row.map((cell, cellIndex) => (\n                    <td\n                      key={cellIndex}\n                      className=\"px-4 py-3 text-sm text-gray-900 dark:text-gray-100 border-r border-gray-200 dark:border-gray-600 last:border-r-0\"\n                    >\n                      {parseInlineMarkdown(cell)}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {renderContent(content)}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/routine-header.tsx"],"sourcesContent":["import { TableRenderer } from \"@/components/ai/table-renderer\";\nimport { Dumbbell } from \"lucide-react\";\n\ninterface RoutineHeaderProps {\n  name: string;\n  description: string;\n  onEdit: () => void;\n  onDelete: () => void;\n  onCopyToWorkout: () => void;\n}\n\nexport function RoutineHeader({ name, description, onEdit, onDelete, onCopyToWorkout }: RoutineHeaderProps) {\n  return (\n    <div className=\"flex justify-between items-start\">\n      <div className=\"flex flex-col gap-1\">\n        <h1 className=\"text-2xl font-semibold tracking-tight\">\n          {name}\n        </h1>\n        <div className=\"text-sm text-muted-foreground prose prose-sm max-w-none dark:prose-invert\">\n          <TableRenderer content={description} />\n        </div>\n      </div>\n      <div className=\"flex gap-2\">\n        <button\n          onClick={onCopyToWorkout}\n          className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-blue-600 text-white hover:bg-blue-700 h-9 px-4 py-2\"\n        >\n          <Dumbbell className=\"h-4 w-4 mr-2\" />\n          Copy as Workout\n        </button>\n        <button\n          onClick={onEdit}\n          className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2\"\n        >\n          Edit\n        </button>\n        <button\n          onClick={onDelete}\n          className=\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-destructive bg-destructive text-destructive-foreground hover:bg-destructive/90 h-9 px-4 py-2\"\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUO,SAAS,cAAc,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAsB;IACxG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCACX;;;;;;kCAEH,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,yIAAA,CAAA,gBAAa;4BAAC,SAAS;;;;;;;;;;;;;;;;;0BAG5B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGvC,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;KAlCgB","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/routine-details.tsx"],"sourcesContent":["interface RoutineDetailsProps {\n  id: string;\n  userId: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport function RoutineDetails({ id, userId, createdAt, updatedAt }: RoutineDetailsProps) {\n  return (\n    <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n      <div className=\"p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Routine Details</h2>\n        <div className=\"space-y-2 text-sm\">\n          <div><span className=\"font-medium\">ID:</span> {id}</div>\n          <div><span className=\"font-medium\">User ID:</span> {userId}</div>\n          <div><span className=\"font-medium\">Created:</span> {new Date(createdAt).toLocaleString()}</div>\n          <div><span className=\"font-medium\">Updated:</span> {new Date(updatedAt).toLocaleString()}</div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOO,SAAS,eAAe,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAuB;IACtF,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAC3C,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CAAI,6LAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAU;gCAAE;;;;;;;sCAC/C,6LAAC;;8CAAI,6LAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAe;gCAAE;;;;;;;sCACpD,6LAAC;;8CAAI,6LAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAe;gCAAE,IAAI,KAAK,WAAW,cAAc;;;;;;;sCACtF,6LAAC;;8CAAI,6LAAC;oCAAK,WAAU;8CAAc;;;;;;gCAAe;gCAAE,IAAI,KAAK,WAAW,cAAc;;;;;;;;;;;;;;;;;;;;;;;;AAKhG;KAdgB","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/utils.ts"],"sourcesContent":["import { redirect } from \"next/navigation\";\n\n/**\n * Redirects to a specified path with an encoded message as a query parameter.\n * @param {('error' | 'success')} type - The type of message, either 'error' or 'success'.\n * @param {string} path - The path to redirect to.\n * @param {string} message - The message to be encoded and added as a query parameter.\n * @returns {never} This function doesn't return as it triggers a redirect.\n */\nexport function encodedRedirect(\n  type: \"error\" | \"success\",\n  path: string,\n  message: string,\n) {\n  return redirect(`${path}?${type}=${encodeURIComponent(message)}`);\n}\n\n/**\n * Determines if an exercise is cardio-based by checking its muscle group\n */\nexport function isCardioExercise(exercise: { muscle_group?: string | null } | null | undefined): boolean {\n  return exercise?.muscle_group?.toLowerCase() === 'cardio';\n}\n\n/**\n * Gets the appropriate label for exercise sets based on exercise type\n */\nexport function getSetLabel(exercise: { muscle_group?: string | null, name?: string } | null | undefined, count: number = 1): string {\n  if (isCardioExercise(exercise)) {\n    if (isDistanceBasedCardio(exercise?.name || '')) {\n      return count === 1 ? 'km' : 'km';\n    } else {\n      return count === 1 ? 'duration' : 'durations';\n    }\n  }\n  return count === 1 ? 'set' : 'sets';\n}\n\n/**\n * Determines if a cardio exercise is distance-based (like running, cycling)\n */\nexport function isDistanceBasedCardio(exerciseName: string): boolean {\n  const distanceKeywords = ['running', 'cycling', 'rowing', 'walking', 'jogging', 'treadmill', 'bike'];\n  return distanceKeywords.some(keyword => exerciseName.toLowerCase().includes(keyword));\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AASO,SAAS,gBACd,IAAyB,EACzB,IAAY,EACZ,OAAe;IAEf,OAAO,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,mBAAmB,UAAU;AAClE;AAKO,SAAS,iBAAiB,QAA6D;IAC5F,OAAO,UAAU,cAAc,kBAAkB;AACnD;AAKO,SAAS,YAAY,QAA4E,EAAE,QAAgB,CAAC;IACzH,IAAI,iBAAiB,WAAW;QAC9B,IAAI,sBAAsB,UAAU,QAAQ,KAAK;YAC/C,OAAO,UAAU,IAAI,OAAO;QAC9B,OAAO;YACL,OAAO,UAAU,IAAI,aAAa;QACpC;IACF;IACA,OAAO,UAAU,IAAI,QAAQ;AAC/B;AAKO,SAAS,sBAAsB,YAAoB;IACxD,MAAM,mBAAmB;QAAC;QAAW;QAAW;QAAU;QAAW;QAAW;QAAa;KAAO;IACpG,OAAO,iBAAiB,IAAI,CAAC,CAAA,UAAW,aAAa,WAAW,GAAG,QAAQ,CAAC;AAC9E","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/exercise-list.tsx"],"sourcesContent":["import type { Tables } from '@/types/supabase-types';\nimport { Clock, StickyNote } from 'lucide-react';\nimport { isCardioExercise, getSetLabel, isDistanceBasedCardio } from '@/utils/utils';\n\ntype Exercise = Tables<'exercises'>;\ntype RoutineExercise = Tables<'routine_exercises'>;\ntype ExerciseSet = Tables<'exercise_sets'>;\n\ninterface ExerciseListProps {\n  exercises: (RoutineExercise & {\n    exercise?: Exercise;\n    exercise_sets?: ExerciseSet[];\n  })[];\n}\n\nexport function ExerciseList({ exercises }: ExerciseListProps) {\n  return (\n    <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n      <div className=\"p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Exercises</h2>\n        <div className=\"divide-y\">\n          {exercises?.map((exercise) => (\n            <div key={exercise.id} className=\"py-4\">\n              <div className=\"flex flex-col gap-3\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"font-medium\">{exercise.exercise?.name}</h3>\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <span className=\"font-medium\">{exercise.exercise_sets?.length || exercise.sets}</span>\n                    <span>{getSetLabel({...exercise.exercise, name: exercise.exercise?.name}, exercise.exercise_sets?.length || exercise.sets)}</span>\n                  </div>\n                </div>\n                \n                {/* Display individual sets */}\n                {exercise.exercise_sets && exercise.exercise_sets.length > 0 ? (\n                  <div className=\"space-y-2\">\n                    <div className=\"text-sm font-medium text-muted-foreground\">\n                      {getSetLabel({...exercise.exercise, name: exercise.exercise?.name}, 2).charAt(0).toUpperCase() + getSetLabel({...exercise.exercise, name: exercise.exercise?.name}, 2).slice(1)}:\n                    </div>\n                    <div className=\"grid gap-2\">\n                      {exercise.exercise_sets\n                        .sort((a, b) => a.set_number - b.set_number)\n                        .map((set, index) => (\n                          <div key={set.id} className=\"flex items-center gap-4 p-2 bg-muted/50 rounded-md text-sm\">\n                            <span className=\"font-medium min-w-[2rem]\">#{set.set_number}</span>\n                            <div className=\"flex items-center gap-4\">\n                              {isCardioExercise(exercise.exercise) ? (\n                                isDistanceBasedCardio(exercise.exercise?.name || '') ? (\n                                  // Distance-Based Cardio: Distance first, then duration\n                                  <>\n                                    {set.duration_minutes && (\n                                      <div className=\"flex items-center gap-1\">\n                                        <span className=\"font-medium\">{set.duration_minutes}</span>\n                                        <span className=\"text-muted-foreground\">km</span>\n                                      </div>\n                                    )}\n                                    {set.reps && (\n                                      <div className=\"flex items-center gap-1\">\n                                        <span className=\"font-medium\">{set.reps}</span>\n                                        <span className=\"text-muted-foreground\">min</span>\n                                      </div>\n                                    )}\n                                  </>\n                                ) : (\n                                  // Time-Based Cardio: Duration first, then reps (optional)\n                                  <>\n                                    {set.duration_minutes && (\n                                      <div className=\"flex items-center gap-1\">\n                                        <span className=\"font-medium\">{set.duration_minutes}</span>\n                                        <span className=\"text-muted-foreground\">min</span>\n                                      </div>\n                                    )}\n                                    {set.reps && (\n                                      <div className=\"flex items-center gap-1\">\n                                        <span className=\"font-medium\">{set.reps}</span>\n                                        <span className=\"text-muted-foreground\">reps</span>\n                                      </div>\n                                    )}\n                                  </>\n                                )\n                              ) : (\n                                // Strength: Reps first, then weight, then duration\n                                <>\n                                  <div className=\"flex items-center gap-1\">\n                                    <span className=\"font-medium\">{set.reps}</span>\n                                    <span className=\"text-muted-foreground\">reps</span>\n                                  </div>\n                                  {set.weight && (\n                                    <div className=\"flex items-center gap-1\">\n                                      <span className=\"font-medium\">{set.weight}</span>\n                                      <span className=\"text-muted-foreground\">kg</span>\n                                    </div>\n                                  )}\n                                  {set.duration_minutes && (\n                                    <div className=\"flex items-center gap-1\">\n                                      <span className=\"font-medium\">{set.duration_minutes}</span>\n                                      <span className=\"text-muted-foreground\">min</span>\n                                    </div>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ) : (\n                  /* Fallback for routines without detailed sets */\n                  <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                    {isCardioExercise(exercise.exercise) ? (\n                      isDistanceBasedCardio(exercise.exercise?.name || '') ? (\n                        // Distance-Based Cardio: Distance first, then duration\n                        <>\n                          {exercise.duration_minutes && (\n                            <div className=\"flex items-center gap-1\">\n                              <span className=\"font-medium\">{exercise.duration_minutes}</span>\n                              <span>km</span>\n                            </div>\n                          )}\n                          {exercise.reps && (\n                            <div className=\"flex items-center gap-1\">\n                              <span className=\"font-medium\">{exercise.reps}</span>\n                              <span>min</span>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        // Time-Based Cardio: Duration first, then reps\n                        <>\n                          {exercise.duration_minutes && (\n                            <div className=\"flex items-center gap-1\">\n                              <span className=\"font-medium\">{exercise.duration_minutes}</span>\n                              <span>min</span>\n                            </div>\n                          )}\n                          {exercise.reps && (\n                            <div className=\"flex items-center gap-1\">\n                              <span className=\"font-medium\">{exercise.reps}</span>\n                              <span>reps</span>\n                            </div>\n                          )}\n                        </>\n                      )\n                    ) : (\n                      // Strength: Reps first, then weight, then duration\n                      <>\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"font-medium\">{exercise.reps}</span>\n                          <span>reps</span>\n                        </div>\n                        {exercise.weight && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"font-medium\">{exercise.weight}</span>\n                            <span>kg</span>\n                          </div>\n                        )}\n                        {exercise.duration_minutes && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"font-medium\">{exercise.duration_minutes}</span>\n                            <span>{isDistanceBasedCardio(exercise.exercise?.name || '') ? 'km' : 'min'}</span>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                )}\n                \n                {/* Rest Time and Notes */}\n                <div className=\"flex items-center gap-4 text-sm\">\n                  {exercise.rest_time_seconds && exercise.rest_time_seconds !== 60 && (\n                    <div className=\"flex items-center gap-1 text-blue-600\">\n                      <Clock className=\"h-4 w-4\" />\n                      <span className=\"font-medium\">{exercise.rest_time_seconds}s rest</span>\n                    </div>\n                  )}\n                  \n                  {exercise.notes && (\n                    <div className=\"flex items-center gap-1 text-amber-600\">\n                      <StickyNote className=\"h-4 w-4\" />\n                      <span className=\"font-medium\">Has notes</span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Exercise Notes */}\n                {exercise.notes && (\n                  <div className=\"p-3 bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800 rounded-md\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <StickyNote className=\"h-4 w-4 text-amber-600\" />\n                      <span className=\"text-sm font-medium text-amber-800 dark:text-amber-200\">Notes:</span>\n                    </div>\n                    <div className=\"text-sm text-amber-700 dark:text-amber-300\">\n                      {exercise.notes}\n                    </div>\n                  </div>\n                )}\n\n                {/* Exercise details */}\n                {exercise.exercise && (\n                  <div className=\"text-sm text-muted-foreground space-y-1\">\n                    <div><span className=\"font-medium\">Muscle Group:</span> {exercise.exercise.muscle_group}</div>\n                    {exercise.exercise.description && (\n                      <div><span className=\"font-medium\">Description:</span> {exercise.exercise.description}</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1250, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/routine-skeleton.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\nimport { Card } from \"@/components/ui/card\";\n\nexport function RoutineSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-4\">\n        {/* Header Skeleton */}\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"h-8 w-1/3 bg-muted animate-pulse rounded\" />\n          <div className=\"h-4 w-2/3 bg-muted animate-pulse rounded\" />\n        </div>\n\n        {/* Details Skeleton */}\n        <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n          <div className=\"p-6\">\n            <div className=\"h-6 w-1/4 bg-muted animate-pulse rounded mb-4\" />\n            <div className=\"space-y-2\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-4 w-2/3 bg-muted animate-pulse rounded\" />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Exercises Skeleton */}\n        <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n          <div className=\"p-6\">\n            <div className=\"h-6 w-1/4 bg-muted animate-pulse rounded mb-4\" />\n            <div className=\"divide-y\">\n              {[1, 2, 3].map((i) => (\n                <div key={i} className=\"py-4\">\n                  <div className=\"flex flex-col gap-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"h-5 w-1/3 bg-muted animate-pulse rounded\" />\n                      <div className=\"flex items-center gap-4\">\n                        {[1, 2, 3].map((j) => (\n                          <div key={j} className=\"h-4 w-16 bg-muted animate-pulse rounded\" />\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"space-y-1\">\n                      {[1, 2, 3, 4].map((j) => (\n                        <div key={j} className=\"h-4 w-full bg-muted animate-pulse rounded\" />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAGO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;4BAAI,WAAU;;;;;;;;;;;;8BAIjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAG;oCAAG;oCAAG;iCAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,6LAAC;wCAAY,WAAU;uCAAb;;;;;;;;;;;;;;;;;;;;;8BAOlB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAG;oCAAG;iCAAE,CAAC,GAAG,CAAC,CAAC,kBACd,6LAAC;wCAAY,WAAU;kDACrB,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;;;;;sEACf,6LAAC;4DAAI,WAAU;sEACZ;gEAAC;gEAAG;gEAAG;6DAAE,CAAC,GAAG,CAAC,CAAC,kBACd,6LAAC;oEAAY,WAAU;mEAAb;;;;;;;;;;;;;;;;8DAIhB,6LAAC;oDAAI,WAAU;8DACZ;wDAAC;wDAAG;wDAAG;wDAAG;qDAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,6LAAC;4DAAY,WAAU;2DAAb;;;;;;;;;;;;;;;;uCAZR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwB1B;KApDgB","debugId":null}},
    {"offset": {"line": 1453, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/routines/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, use } from 'react';\nimport { notFound, useRouter } from 'next/navigation';\nimport { RoutineHeader } from '@/components/routines/routine-header';\nimport { RoutineDetails } from '@/components/routines/routine-details';\nimport { ExerciseList } from '@/components/routines/exercise-list';\nimport { RoutineSkeleton } from '@/components/routines/routine-skeleton';\nimport { toast } from 'sonner';\nimport type { RoutineWithExercises } from '@/types/supabase-types';\n\nexport default function RoutinePage({ params }: { params: Promise<{ id: string }> }) {\n  const { id } = use(params);\n  const router = useRouter();\n  const [routine, setRoutine] = useState<RoutineWithExercises | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchRoutine() {\n      try {\n        const response = await fetch(`/api/routines/${id}`);\n        if (!response.ok) {\n          if (response.status === 404) {\n            notFound();\n          }\n          throw new Error('Failed to fetch routine');\n        }\n        const data = await response.json();\n        console.log('🔍 Debug - Fetched routine data:', data.routine);\n        console.log('🔍 Debug - Routine exercises:', data.routine?.routine_exercises);\n        if (data.routine?.routine_exercises) {\n          data.routine.routine_exercises.forEach((exercise: any, index: number) => {\n            console.log(`🔍 Debug - Exercise ${index}:`, {\n              name: exercise.exercise?.name,\n              notes: exercise.notes,\n              rest_time_seconds: exercise.rest_time_seconds,\n              hasNotes: !!exercise.notes,\n              notesValue: exercise.notes\n            });\n          });\n        }\n        setRoutine(data.routine);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchRoutine();\n  }, [id]);\n\n  const handleEdit = () => {\n    router.push(`/routines/${id}/edit`);\n  };\n\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this routine?')) return;\n    \n    try {\n      const response = await fetch(`/api/routines/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) throw new Error('Failed to delete routine');\n      \n      router.push('/routines');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to delete routine');\n    }\n  };\n\n  const handleCopyToWorkout = () => {\n    if (!routine || !routine.routine_exercises?.length) {\n      toast.error('No exercises found in this routine');\n      return;\n    }\n\n    // Create URL parameters to prefill the workout form\n    const searchParams = new URLSearchParams();\n    searchParams.set('from_routine', routine.id);\n    searchParams.set('name', `${routine.name} - ${new Date().toLocaleDateString()}`);\n    \n    // Navigate to new workout page with prefilled data\n    router.push(`/workouts/new?${searchParams.toString()}`);\n    toast.success('Redirecting to workout setup...');\n  };\n\n  if (loading) return <RoutineSkeleton />;\n  if (error) return <div className=\"text-destructive\">{error}</div>;\n  if (!routine) return notFound();\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-4\">\n        <RoutineHeader \n          name={routine.name}\n          description={routine.description || ''}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          onCopyToWorkout={handleCopyToWorkout}\n        />\n\n        <RoutineDetails \n          id={routine.id}\n          userId={routine.user_id}\n          createdAt={routine.created_at}\n          updatedAt={routine.updated_at}\n        />\n\n        <ExerciseList \n          exercises={routine.routine_exercises || []}\n        />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}