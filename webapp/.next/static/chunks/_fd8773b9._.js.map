{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nexport { Card, CardHeader, CardTitle, CardContent } "],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectItem,\n} "],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAOA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6RACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8bACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;sBAET,cAAA,6LAAC,qKAAA,CAAA,WAAwB;gBACvB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;0BAGH;;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/routine-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Plus, Trash2, Save, Dumbbell, Copy } from \"lucide-react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport type { Exercise, Routine, RoutineExercise, ExerciseSet } from '@/types/supabase-types';\n\ninterface RoutineFormProps {\n  initialData?: Routine & {\n    routine_exercises?: (RoutineExercise & {\n      exercise?: Exercise;\n      exercise_sets?: ExerciseSet[];\n    })[];\n  };\n  onSuccess: (routine: Routine) => void;\n}\n\ninterface SetData {\n  reps: number;\n  weight: number | null;\n  duration_minutes: number | null;\n}\n\ninterface ExerciseData {\n  id?: string;\n  exercise_id: string;\n  sets: SetData[];\n  order_index?: number;\n  exercise?: Exercise | null;\n}\n\nexport function RoutineForm({ initialData, onSuccess }: RoutineFormProps) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [availableExercises, setAvailableExercises] = useState<Exercise[]>([]);\n  const [name, setName] = useState(initialData?.name || '');\n  const [description, setDescription] = useState(initialData?.description || '');\n  const [exercises, setExercises] = useState<ExerciseData[]>(() => {\n    if (!initialData?.routine_exercises) return [];\n    \n    return initialData.routine_exercises.map(re => ({\n      id: re.id,\n      exercise_id: re.exercise_id,\n      sets: re.exercise_sets && re.exercise_sets.length > 0 \n        ? re.exercise_sets\n            .sort((a, b) => a.set_number - b.set_number)\n            .map(set => ({\n              reps: set.reps,\n              weight: set.weight,\n              duration_minutes: set.duration_minutes\n            }))\n        : Array.from({ length: re.sets }, () => ({\n            reps: re.reps,\n            weight: re.weight,\n            duration_minutes: re.duration_minutes\n          })),\n      order_index: re.order_index,\n      exercise: re.exercise\n    }));\n  });\n  const [loadingExercises, setLoadingExercises] = useState(true);\n\n  useEffect(() => {\n    const fetchExercises = async () => {\n      try {\n        const response = await fetch('/api/exercises');\n        if (!response.ok) throw new Error('Failed to fetch exercises');\n        const data = await response.json();\n        setAvailableExercises(data.exercises);\n      } catch (error) {\n        console.error('Error fetching exercises:', error);\n      } finally {\n        setLoadingExercises(false);\n      }\n    };\n\n    fetchExercises();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!name || exercises.length === 0) {\n      setError(\"Please add a name and at least one exercise\");\n      return;\n    }\n    \n    // Validate that all exercises have an exercise_id and at least one set\n    if (exercises.some(ex => !ex.exercise_id || ex.sets.length === 0)) {\n      setError(\"Please select an exercise for all items and ensure each has at least one set\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n\n    try {\n      const url = initialData \n        ? `/api/routines/${initialData.id}`\n        : '/api/routines';\n      \n      const method = initialData ? 'PATCH' : 'POST';\n      \n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name,\n          description: description || null,\n          exercises: exercises.map((ex, index) => ({\n            id: ex.id,\n            exercise_id: ex.exercise_id,\n            sets: ex.sets,\n            order_index: index\n          }))\n        })\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to save routine');\n      }\n      \n      const data = await response.json();\n      onSuccess(data.routine);\n    } catch (error) {\n      console.error('Error saving routine:', error);\n      setError(error instanceof Error ? error.message : 'Failed to save routine');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addExercise = () => {\n    setExercises(prev => [\n      ...prev, \n      {\n        exercise_id: '',\n        sets: [{ reps: 10, weight: null, duration_minutes: null }]\n      }\n    ]);\n  };\n\n  const removeExercise = (index: number) => {\n    setExercises(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const updateExercise = (index: number, field: string, value: any) => {\n    setExercises(prev => {\n      const updated = [...prev];\n      updated[index] = { ...updated[index], [field]: value };\n      \n      // If changing exercise_id, try to find the exercise details\n      if (field === 'exercise_id' && value) {\n        const selectedExercise = availableExercises.find(ex => ex.id === value);\n        updated[index].exercise = selectedExercise || null;\n      }\n      \n      return updated;\n    });\n  };\n\n  const addSet = (exerciseIndex: number) => {\n    setExercises(prev => {\n      const updated = [...prev];\n      const lastSet = updated[exerciseIndex].sets[updated[exerciseIndex].sets.length - 1];\n      updated[exerciseIndex] = {\n        ...updated[exerciseIndex],\n        sets: [\n          ...updated[exerciseIndex].sets,\n          { \n            reps: lastSet?.reps || 10, \n            weight: lastSet?.weight || null, \n            duration_minutes: lastSet?.duration_minutes || null \n          }\n        ]\n      };\n      return updated;\n    });\n  };\n\n  const removeSet = (exerciseIndex: number, setIndex: number) => {\n    setExercises(prev => {\n      const updated = [...prev];\n      if (updated[exerciseIndex].sets.length > 1) {\n        updated[exerciseIndex] = {\n          ...updated[exerciseIndex],\n          sets: updated[exerciseIndex].sets.filter((_, i) => i !== setIndex)\n        };\n      }\n      return updated;\n    });\n  };\n\n  const updateSet = (exerciseIndex: number, setIndex: number, field: keyof SetData, value: any) => {\n    setExercises(prev => {\n      const updated = [...prev];\n      updated[exerciseIndex] = {\n        ...updated[exerciseIndex],\n        sets: updated[exerciseIndex].sets.map((set, i) => {\n          if (i !== setIndex) return set;\n          return { ...set, [field]: value };\n        })\n      };\n      return updated;\n    });\n  };\n\n  const copySetToAll = (exerciseIndex: number, setIndex: number) => {\n    const sourceSet = exercises[exerciseIndex].sets[setIndex];\n    setExercises(prev => {\n      const updated = [...prev];\n      updated[exerciseIndex] = {\n        ...updated[exerciseIndex],\n        sets: updated[exerciseIndex].sets.map((_, i) => \n          i === setIndex ? sourceSet : { ...sourceSet }\n        )\n      };\n      return updated;\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card className=\"p-6 space-y-6\">\n        {error && (\n          <div className=\"p-3 bg-destructive/10 text-destructive rounded-md\">\n            {error}\n          </div>\n        )}\n      \n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name\">Routine Name</Label>\n          <Input\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"description\">Description</Label>\n          <Textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Optional description...\"\n          />\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Dumbbell className=\"h-5 w-5\" />\n              <h3 className=\"text-lg font-medium\">Exercises</h3>\n            </div>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={addExercise}\n              disabled={loadingExercises}\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Exercise\n            </Button>\n          </div>\n\n          {loadingExercises ? (\n            <div className=\"text-center p-4\">\n              <div className=\"h-6 w-24 bg-muted rounded-md animate-pulse mx-auto mb-2\" />\n              <div className=\"h-4 w-32 bg-muted rounded-md animate-pulse mx-auto\" />\n            </div>\n          ) : (\n            <div className=\"space-y-6\">\n              {exercises.length === 0 ? (\n                <div className=\"text-center p-6 border rounded-md bg-muted/10\">\n                  <p className=\"text-muted-foreground\">No exercises added yet. Use the button above to add exercises to your routine.</p>\n                </div>\n              ) : (\n                exercises.map((exercise, exerciseIndex) => (\n                  <Card key={exerciseIndex} className=\"p-4\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"w-full\">\n                          <Label htmlFor={`exercise-${exerciseIndex}`} className=\"mb-2 block\">\n                            Exercise {exerciseIndex + 1}\n                          </Label>\n                          <Select\n                            value={exercise.exercise_id}\n                            onValueChange={(value) => updateExercise(exerciseIndex, 'exercise_id', value)}\n                          >\n                            <SelectTrigger className=\"w-full\">\n                              <SelectValue placeholder=\"Select an exercise\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {availableExercises.map((ex) => (\n                                <SelectItem key={ex.id} value={ex.id}>\n                                  {ex.name} ({ex.muscle_group})\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() => removeExercise(exerciseIndex)}\n                          className=\"text-destructive ml-2\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label className=\"text-sm font-medium\">Sets ({exercise.sets.length})</Label>\n                          <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => addSet(exerciseIndex)}\n                          >\n                            <Plus className=\"h-3 w-3 mr-1\" />\n                            Add Set\n                          </Button>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                          {exercise.sets.map((set, setIndex) => (\n                            <div key={setIndex} className=\"flex items-center gap-2 p-3 bg-muted/50 rounded-md\">\n                              <span className=\"text-sm font-medium min-w-[2rem]\">#{setIndex + 1}</span>\n                              \n                              <div className=\"flex-1 grid grid-cols-3 gap-2\">\n                                <div>\n                                  <Label htmlFor={`reps-${exerciseIndex}-${setIndex}`} className=\"text-xs\">Reps</Label>\n                                  <Input\n                                    id={`reps-${exerciseIndex}-${setIndex}`}\n                                    type=\"number\"\n                                    min=\"1\"\n                                    value={set.reps}\n                                    onChange={(e) => updateSet(exerciseIndex, setIndex, 'reps', parseInt(e.target.value) || 1)}\n                                    className=\"h-8\"\n                                  />\n                                </div>\n                                <div>\n                                  <Label htmlFor={`weight-${exerciseIndex}-${setIndex}`} className=\"text-xs\">Weight (kg)</Label>\n                                  <Input\n                                    id={`weight-${exerciseIndex}-${setIndex}`}\n                                    type=\"number\"\n                                    min=\"0\"\n                                    step=\"0.5\"\n                                    value={set.weight || ''}\n                                    onChange={(e) => updateSet(exerciseIndex, setIndex, 'weight', e.target.value ? parseFloat(e.target.value) : null)}\n                                    placeholder=\"0\"\n                                    className=\"h-8\"\n                                  />\n                                </div>\n                                <div>\n                                  <Label htmlFor={`duration-${exerciseIndex}-${setIndex}`} className=\"text-xs\">Duration (min)</Label>\n                                  <Input\n                                    id={`duration-${exerciseIndex}-${setIndex}`}\n                                    type=\"number\"\n                                    min=\"0\"\n                                    value={set.duration_minutes || ''}\n                                    onChange={(e) => updateSet(exerciseIndex, setIndex, 'duration_minutes', e.target.value ? parseInt(e.target.value) : null)}\n                                    placeholder=\"0\"\n                                    className=\"h-8\"\n                                  />\n                                </div>\n                              </div>\n\n                              <div className=\"flex gap-1\">\n                                <Button\n                                  type=\"button\"\n                                  variant=\"ghost\"\n                                  size=\"icon\"\n                                  onClick={() => copySetToAll(exerciseIndex, setIndex)}\n                                  className=\"h-8 w-8\"\n                                  title=\"Copy to all sets\"\n                                >\n                                  <Copy className=\"h-3 w-3\" />\n                                </Button>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"ghost\"\n                                  size=\"icon\"\n                                  onClick={() => removeSet(exerciseIndex, setIndex)}\n                                  className=\"h-8 w-8 text-destructive\"\n                                  disabled={exercise.sets.length === 1}\n                                >\n                                  <Trash2 className=\"h-3 w-3\" />\n                                </Button>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                ))\n              )}\n            </div>\n          )}\n        </div>\n\n        <Button \n          type=\"submit\" \n          className=\"w-full\"\n          disabled={loading || loadingExercises}\n        >\n          {loading ? 'Saving...' : (\n            <>\n              <Save className=\"h-4 w-4 mr-2\" />\n              {initialData ? 'Update' : 'Create'} Routine\n            </>\n          )}\n        </Button>\n      </Card>\n    </form>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/routines/routine-skeleton.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\nimport { Card } from \"@/components/ui/card\";\n\nexport function RoutineSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-4\">\n        {/* Header Skeleton */}\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"h-8 w-1/3 bg-muted animate-pulse rounded\" />\n          <div className=\"h-4 w-2/3 bg-muted animate-pulse rounded\" />\n        </div>\n\n        {/* Details Skeleton */}\n        <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n          <div className=\"p-6\">\n            <div className=\"h-6 w-1/4 bg-muted animate-pulse rounded mb-4\" />\n            <div className=\"space-y-2\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"h-4 w-2/3 bg-muted animate-pulse rounded\" />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Exercises Skeleton */}\n        <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm\">\n          <div className=\"p-6\">\n            <div className=\"h-6 w-1/4 bg-muted animate-pulse rounded mb-4\" />\n            <div className=\"divide-y\">\n              {[1, 2, 3].map((i) => (\n                <div key={i} className=\"py-4\">\n                  <div className=\"flex flex-col gap-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"h-5 w-1/3 bg-muted animate-pulse rounded\" />\n                      <div className=\"flex items-center gap-4\">\n                        {[1, 2, 3].map((j) => (\n                          <div key={j} className=\"h-4 w-16 bg-muted animate-pulse rounded\" />\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"space-y-1\">\n                      {[1, 2, 3, 4].map((j) => (\n                        <div key={j} className=\"h-4 w-full bg-muted animate-pulse rounded\" />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAGO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;4BAAI,WAAU;;;;;;;;;;;;8BAIjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAG;oCAAG;oCAAG;iCAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,6LAAC;wCAAY,WAAU;uCAAb;;;;;;;;;;;;;;;;;;;;;8BAOlB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAG;oCAAG;iCAAE,CAAC,GAAG,CAAC,CAAC,kBACd,6LAAC;wCAAY,WAAU;kDACrB,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;;;;;sEACf,6LAAC;4DAAI,WAAU;sEACZ;gEAAC;gEAAG;gEAAG;6DAAE,CAAC,GAAG,CAAC,CAAC,kBACd,6LAAC;oEAAY,WAAU;mEAAb;;;;;;;;;;;;;;;;8DAIhB,6LAAC;oDAAI,WAAU;8DACZ;wDAAC;wDAAG;wDAAG;wDAAG;qDAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,6LAAC;4DAAY,WAAU;2DAAb;;;;;;;;;;;;;;;;uCAZR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwB1B;KApDgB","debugId":null}},
    {"offset": {"line": 1310, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/routines/%5Bid%5D/edit/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, use } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { RoutineForm } from \"@/components/routines/routine-form\";\nimport { RoutineSkeleton } from \"@/components/routines/routine-skeleton\";\nimport type { Routine } from '@/types/supabase-types';\n\ninterface Props {\n  params: Promise<{ id: string }>;\n}\n\nexport default function EditRoutinePage({ params }: Props) {\n  const { id } = use(params);\n  const router = useRouter();\n  const [routine, setRoutine] = useState<Routine | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchRoutine = async () => {\n      try {\n        const response = await fetch(`/api/routines/${id}`);\n        if (!response.ok) {\n          if (response.status === 404) {\n            router.push('/routines');\n            return;\n          }\n          throw new Error('Failed to fetch routine');\n        }\n        const data = await response.json();\n        setRoutine(data.routine);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        console.error('Error fetching routine:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRoutine();\n  }, [id, router]);\n\n  if (loading) {\n    return <RoutineSkeleton />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"text-destructive\">{error}</div>\n      </div>\n    );\n  }\n\n  if (!routine) return null;\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"flex items-center gap-4 mb-6\">\n        <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <h1 className=\"text-2xl font-bold\">Edit Routine</h1>\n      </div>\n\n      <RoutineForm \n        initialData={routine}\n        onSuccess={(updatedRoutine) => {\n          router.push(`/routines/${updatedRoutine.id}`);\n        }}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAce,SAAS,gBAAgB,EAAE,MAAM,EAAS;;IACvD,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IACnB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;0DAAe;oBACnB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,CAAC,cAAc,EAAE,IAAI;wBAClD,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,IAAI,SAAS,MAAM,KAAK,KAAK;gCAC3B,OAAO,IAAI,CAAC;gCACZ;4BACF;4BACA,MAAM,IAAI,MAAM;wBAClB;wBACA,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,WAAW,KAAK,OAAO;oBACzB,EAAE,OAAO,KAAK;wBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAC9C,QAAQ,KAAK,CAAC,2BAA2B;oBAC3C,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;oCAAG;QAAC;QAAI;KAAO;IAEf,IAAI,SAAS;QACX,qBAAO,6LAAC,iJAAA,CAAA,kBAAe;;;;;IACzB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAoB;;;;;;;;;;;IAGzC;IAEA,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,8HAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,SAAS,IAAM,OAAO,IAAI;;0CAC1D,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGxC,6LAAC;wBAAG,WAAU;kCAAqB;;;;;;;;;;;;0BAGrC,6LAAC,6IAAA,CAAA,cAAW;gBACV,aAAa;gBACb,WAAW,CAAC;oBACV,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,eAAe,EAAE,EAAE;gBAC9C;;;;;;;;;;;;AAIR;GA/DwB;;QAEP,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}