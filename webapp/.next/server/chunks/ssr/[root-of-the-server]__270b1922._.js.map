{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/utils.ts"],"sourcesContent":["import { redirect } from \"next/navigation\";\n\n/**\n * Redirects to a specified path with an encoded message as a query parameter.\n * @param {('error' | 'success')} type - The type of message, either 'error' or 'success'.\n * @param {string} path - The path to redirect to.\n * @param {string} message - The message to be encoded and added as a query parameter.\n * @returns {never} This function doesn't return as it triggers a redirect.\n */\nexport function encodedRedirect(\n  type: \"error\" | \"success\",\n  path: string,\n  message: string,\n) {\n  return redirect(`${path}?${type}=${encodeURIComponent(message)}`);\n}\n\n/**\n * Determines if an exercise is cardio-based by checking its muscle group\n */\nexport function isCardioExercise(exercise: { muscle_group?: string | null } | null | undefined): boolean {\n  return exercise?.muscle_group?.toLowerCase() === 'cardio';\n}\n\n/**\n * Gets the appropriate label for exercise sets based on exercise type\n */\nexport function getSetLabel(exercise: { muscle_group?: string | null, name?: string } | null | undefined, count: number = 1): string {\n  if (isCardioExercise(exercise)) {\n    if (isDistanceBasedCardio(exercise?.name || '')) {\n      return count === 1 ? 'km' : 'km';\n    } else {\n      return count === 1 ? 'duration' : 'durations';\n    }\n  }\n  return count === 1 ? 'set' : 'sets';\n}\n\n/**\n * Determines if a cardio exercise is distance-based (like running, cycling)\n */\nexport function isDistanceBasedCardio(exerciseName: string): boolean {\n  const distanceKeywords = ['running', 'cycling', 'rowing', 'walking', 'jogging', 'treadmill', 'bike'];\n  return distanceKeywords.some(keyword => exerciseName.toLowerCase().includes(keyword));\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AASO,SAAS,gBACd,IAAyB,EACzB,IAAY,EACZ,OAAe;IAEf,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,mBAAmB,UAAU;AAClE;AAKO,SAAS,iBAAiB,QAA6D;IAC5F,OAAO,UAAU,cAAc,kBAAkB;AACnD;AAKO,SAAS,YAAY,QAA4E,EAAE,QAAgB,CAAC;IACzH,IAAI,iBAAiB,WAAW;QAC9B,IAAI,sBAAsB,UAAU,QAAQ,KAAK;YAC/C,OAAO,UAAU,IAAI,OAAO;QAC9B,OAAO;YACL,OAAO,UAAU,IAAI,aAAa;QACpC;IACF;IACA,OAAO,UAAU,IAAI,QAAQ;AAC/B;AAKO,SAAS,sBAAsB,YAAoB;IACxD,MAAM,mBAAmB;QAAC;QAAW;QAAW;QAAU;QAAW;QAAW;QAAa;KAAO;IACpG,OAAO,iBAAiB,IAAI,CAAC,CAAA,UAAW,aAAa,WAAW,GAAG,QAAQ,CAAC;AAC9E","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport const createClient = async () => {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) => {\n              cookieStore.set(name, value, options);\n            });\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    },\n  );\n};"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,MAAM,eAAe;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;oBAC/B;gBACF,EAAE,OAAO,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { encodedRedirect } from \"@/utils/utils\";\nimport { createClient } from \"@/utils/supabase/server\";\nimport { cookies } from \"next/headers\";\nimport { headers } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\nimport { User } from \"@supabase/auth-js\";\nimport { revalidatePath } from 'next/cache';\nimport { createServerClient, type CookieOptions } from \"@supabase/ssr\";\n\nexport const signUpAction = async (formData: FormData) => {\n  const email = formData.get(\"email\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n  const supabase = await createClient();\n  const origin = (await headers()).get(\"origin\");\n\n  if (!email || !password) {\n    return encodedRedirect(\n      \"error\",\n      \"/sign-up\",\n      \"Email and password are required\",\n    );\n  }\n\n  const { error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      emailRedirectTo: `${origin}/auth/callback`,\n    },\n  });\n\n  if (error) {\n    console.error(error.code + \" \" + error.message);\n    return encodedRedirect(\"error\", \"/sign-up\", error.message);\n  } else {\n    return encodedRedirect(\n      \"success\",\n      \"/sign-up\",\n      \"Thanks for signing up! Please check your email for a verification link.\",\n    );\n  }\n};\n\nexport const signInAction = async (formData: FormData, setUser: (user: User | null) => void) => {\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n  const supabase = await createClient();\n\n  const { data, error } = await supabase.auth.signInWithPassword({\n    email,\n    password,\n  });\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  if (data.session) {\n    const { user } = data.session;\n    setUser(user);\n  }\n\n  return redirect(\"/\");\n};\n\nexport const forgotPasswordAction = async (formData: FormData) => {\n  const email = formData.get(\"email\")?.toString();\n  const supabase = await createClient();\n  const origin = (await headers()).get(\"origin\");\n  const callbackUrl = formData.get(\"callbackUrl\")?.toString();\n\n  if (!email) {\n    return encodedRedirect(\"error\", \"/forgot-password\", \"Email is required\");\n  }\n\n  const { error } = await supabase.auth.resetPasswordForEmail(email, {\n    redirectTo: `${origin}/auth/callback?redirect_to=/protected/reset-password`,\n  });\n\n  if (error) {\n    console.error(error.message);\n    return encodedRedirect(\n      \"error\",\n      \"/forgot-password\",\n      \"Could not reset password\",\n    );\n  }\n\n  if (callbackUrl) {\n    return redirect(callbackUrl);\n  }\n\n  return encodedRedirect(\n    \"success\",\n    \"/forgot-password\",\n    \"Check your email for a link to reset your password.\",\n  );\n};\n\nexport const resetPasswordAction = async (formData: FormData) => {\n  const supabase = await createClient();\n\n  const password = formData.get(\"password\") as string;\n  const confirmPassword = formData.get(\"confirmPassword\") as string;\n\n  if (!password || !confirmPassword) {\n    encodedRedirect(\n      \"error\",\n      \"/protected/reset-password\",\n      \"Password and confirm password are required\",\n    );\n  }\n\n  if (password !== confirmPassword) {\n    encodedRedirect(\n      \"error\",\n      \"/protected/reset-password\",\n      \"Passwords do not match\",\n    );\n  }\n\n  const { error } = await supabase.auth.updateUser({\n    password: password,\n  });\n\n  if (error) {\n    encodedRedirect(\n      \"error\",\n      \"/protected/reset-password\",\n      \"Password update failed\",\n    );\n  }\n\n  encodedRedirect(\"success\", \"/protected/reset-password\", \"Password updated\");\n};\n\nexport const signOutAction = async () => {\n  const supabase = await createClient();\n  await supabase.auth.signOut();\n  return redirect(\"/sign-in\");\n};\n\nexport async function startEmptyWorkout() {\n  const supabase = await createClient();\n  \n  const { data: { user } } = await supabase.auth.getUser();\n  if (!user) {\n    throw new Error('User not authenticated');\n  }\n\n  // Create a new empty workout\n  const { data: workout, error } = await supabase\n    .from('workouts')\n    .insert({\n      name: 'Custom Workout',\n      user_id: user.id,\n    })\n    .select()\n    .single();\n\n  if (error) {\n    throw new Error('Failed to create workout');\n  }\n\n  revalidatePath('/workouts');\n  redirect(`/workouts/${workout.id}`);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/.next-internal/server/app/%28auth-pages%29/sign-up/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {startEmptyWorkout as '00c32ba47fe3db93d17f40fcb8e9645bb7c683216c'} from 'ACTIONS_MODULE0'\nexport {signOutAction as '7f092b8908cc49c2bd6ad02cd5a55d7294e2b30d29'} from 'ACTIONS_MODULE0'\nexport {resetPasswordAction as '7f701c56d7fa750b3d0abc46a302ad5bb9024e1c86'} from 'ACTIONS_MODULE0'\nexport {forgotPasswordAction as '7fd84f20d0ca2040634473939c2c5f207ea8e7dbef'} from 'ACTIONS_MODULE0'\nexport {signInAction as '7fdfe4649a62848bf48032a2a189d40a01770a300f'} from 'ACTIONS_MODULE0'\nexport {signUpAction as '7fe02229a3948c57b18fa3d81db6b47b1a0649e341'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/form-message.tsx"],"sourcesContent":["export type Message =\n  | { success: string }\n  | { error: string }\n  | { message: string };\n\nexport function FormMessage({ message }: { message: Message }) {\n  return (\n    <div className=\"flex flex-col gap-2 w-full max-w-md text-sm\">\n      {\"success\" in message && (\n        <div className=\"text-foreground border-l-2 border-foreground px-4\">\n          {message.success}\n        </div>\n      )}\n      {\"error\" in message && (\n        <div className=\"text-destructive-foreground border-l-2 border-destructive-foreground px-4\">\n          {message.error}\n        </div>\n      )}\n      {\"message\" in message && (\n        <div className=\"text-foreground border-l-2 px-4\">{message.message}</div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAKO,SAAS,YAAY,EAAE,OAAO,EAAwB;IAC3D,qBACE,8OAAC;QAAI,WAAU;;YACZ,aAAa,yBACZ,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,OAAO;;;;;;YAGnB,WAAW,yBACV,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,KAAK;;;;;;YAGjB,aAAa,yBACZ,8OAAC;gBAAI,WAAU;0BAAmC,QAAQ,OAAO;;;;;;;;;;;;AAIzE","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/submit-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SubmitButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubmitButton() from the server but SubmitButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/submit-button.tsx <module evaluation>\",\n    \"SubmitButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/submit-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SubmitButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubmitButton() from the server but SubmitButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/submit-button.tsx\",\n    \"SubmitButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,qCACA","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/%28auth-pages%29/smtp-message.tsx"],"sourcesContent":["import { ArrowUpRight, InfoIcon } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport function SmtpMessage() {\n  return (\n    <></>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGO,SAAS;IACd,qBACE;AAEJ","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/%28auth-pages%29/sign-up/page.tsx"],"sourcesContent":["\nimport { signUpAction } from \"@/app/actions\";\nimport { FormMessage, Message } from \"@/components/form-message\";\nimport { SubmitButton } from \"@/components/submit-button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport Link from \"next/link\";\nimport { SmtpMessage } from \"../smtp-message\";\n\nexport default async function Signup(props: {\n  searchParams: Promise<Message>;\n}) {\n  const searchParams = await props.searchParams;\n  if (\"message\" in searchParams) {\n    return (\n      <div className=\"w-full flex-1 flex items-center h-screen sm:max-w-md justify-center gap-2 p-4\">\n        <FormMessage message={searchParams} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <form className=\"flex flex-col min-w-64 max-w-64 mx-auto\">\n        <h1 className=\"text-2xl font-medium\">Sign up</h1>\n        <p className=\"text-sm text text-foreground\">\n          Already have an account?{\" \"}\n          <Link className=\"text-primary font-medium underline\" href=\"/sign-in\">\n            Sign in\n          </Link>\n        </p>\n        <div className=\"flex flex-col gap-2 [&>input]:mb-3 mt-8\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input name=\"email\" placeholder=\"you@example.com\" required />\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Your password\"\n            minLength={6}\n            required\n          />\n          <SubmitButton formAction={signUpAction} pendingText=\"Signing up...\">\n            Sign up\n          </SubmitButton>\n          <FormMessage message={searchParams} />\n        </div>\n      </form>\n      <SmtpMessage />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,eAAe,OAAO,KAEpC;IACC,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,IAAI,aAAa,cAAc;QAC7B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,8HAAA,CAAA,cAAW;gBAAC,SAAS;;;;;;;;;;;IAG5B;IAEA,qBACE;;0BACE,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAAuB;;;;;;kCACrC,8OAAC;wBAAE,WAAU;;4BAA+B;4BACjB;0CACzB,8OAAC,4JAAA,CAAA,UAAI;gCAAC,WAAU;gCAAqC,MAAK;0CAAW;;;;;;;;;;;;kCAIvE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0HAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAQ;;;;;;0CACvB,8OAAC,0HAAA,CAAA,QAAK;gCAAC,MAAK;gCAAQ,aAAY;gCAAkB,QAAQ;;;;;;0CAC1D,8OAAC,0HAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAW;;;;;;0CAC1B,8OAAC,0HAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,MAAK;gCACL,aAAY;gCACZ,WAAW;gCACX,QAAQ;;;;;;0CAEV,8OAAC,+HAAA,CAAA,eAAY;gCAAC,YAAY,8GAAA,CAAA,eAAY;gCAAE,aAAY;0CAAgB;;;;;;0CAGpE,8OAAC,8HAAA,CAAA,cAAW;gCAAC,SAAS;;;;;;;;;;;;;;;;;;0BAG1B,8OAAC,4IAAA,CAAA,cAAW;;;;;;;AAGlB","debugId":null}}]
}