{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport const createClient = async () => {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) => {\n              cookieStore.set(name, value, options);\n            });\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    },\n  );\n};"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,MAAM,eAAe;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;oBAC/B;gBACF,EAAE,OAAO,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/auth.ts"],"sourcesContent":["import { createClient } from '@/utils/supabase/server';\nimport { NextResponse } from 'next/server';\n\nexport async function verifyJWT(authHeader: string | null) {\n  if (!authHeader?.startsWith('Bearer ')) {\n    return { error: 'No bearer token provided', status: 401, code: 'no_token' };\n  }\n\n  const token = authHeader.split(' ')[1];\n  const supabase = await createClient();\n\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser(token);\n\n    if (error) {\n      console.error('JWT verification error:', error);\n      \n      // Handle specific JWT errors\n      if (error.message?.includes('token is expired') || error.code === 'bad_jwt') {\n        return { \n          error: 'Authentication token has expired. Please sign in again.', \n          status: 401,\n          code: 'token_expired'\n        };\n      }\n      \n      if (error.message?.includes('invalid JWT') || error.message?.includes('unable to parse')) {\n        return { \n          error: 'Invalid authentication token. Please sign in again.', \n          status: 401,\n          code: 'invalid_token'\n        };\n      }\n      \n      return { \n        error: error.message || 'Authentication failed', \n        status: 401,\n        code: 'auth_error'\n      };\n    }\n\n    if (!user) {\n      return { \n        error: 'Invalid token - no user found', \n        status: 401,\n        code: 'no_user'\n      };\n    }\n\n    return { user, supabase };\n  } catch (error) {\n    console.error('JWT verification error:', error);\n    \n    // Handle specific error types\n    if (error instanceof Error) {\n      if (error.message?.includes('token is expired') || error.message?.includes('bad_jwt')) {\n        return { \n          error: 'Authentication token has expired. Please sign in again.', \n          status: 401,\n          code: 'token_expired'\n        };\n      }\n      \n      if (error.message?.includes('invalid JWT')) {\n        return { \n          error: 'Invalid authentication token. Please sign in again.', \n          status: 401,\n          code: 'invalid_token'\n        };\n      }\n    }\n    \n    return { \n      error: error instanceof Error ? error.message : 'Unknown authentication error',\n      status: 500,\n      code: 'server_error'\n    };\n  }\n} "],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,UAAU,UAAyB;IACvD,IAAI,CAAC,YAAY,WAAW,YAAY;QACtC,OAAO;YAAE,OAAO;YAA4B,QAAQ;YAAK,MAAM;QAAW;IAC5E;IAEA,MAAM,QAAQ,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;IACtC,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IAElC,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC;QAE9D,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B;YAEzC,6BAA6B;YAC7B,IAAI,MAAM,OAAO,EAAE,SAAS,uBAAuB,MAAM,IAAI,KAAK,WAAW;gBAC3E,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,MAAM;gBACR;YACF;YAEA,IAAI,MAAM,OAAO,EAAE,SAAS,kBAAkB,MAAM,OAAO,EAAE,SAAS,oBAAoB;gBACxF,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,MAAM;gBACR;YACF;YAEA,OAAO;gBACL,OAAO,MAAM,OAAO,IAAI;gBACxB,QAAQ;gBACR,MAAM;YACR;QACF;QAEA,IAAI,CAAC,MAAM;YACT,OAAO;gBACL,OAAO;gBACP,QAAQ;gBACR,MAAM;YACR;QACF;QAEA,OAAO;YAAE;YAAM;QAAS;IAC1B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QAEzC,8BAA8B;QAC9B,IAAI,iBAAiB,OAAO;YAC1B,IAAI,MAAM,OAAO,EAAE,SAAS,uBAAuB,MAAM,OAAO,EAAE,SAAS,YAAY;gBACrF,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,MAAM;gBACR;YACF;YAEA,IAAI,MAAM,OAAO,EAAE,SAAS,gBAAgB;gBAC1C,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,MAAM;gBACR;YACF;QACF;QAEA,OAAO;YACL,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,QAAQ;YACR,MAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/api/auth/verify/route.ts"],"sourcesContent":["import { verifyJWT } from '@/utils/auth';\nimport { NextResponse } from 'next/server';\n\nexport async function GET(request: Request) {\n  const result = await verifyJWT(request.headers.get('authorization'));\n\n  if ('error' in result) {\n    return NextResponse.json(\n      { valid: false, error: result.error },\n      { status: result.status }\n    );\n  }\n\n  const { user } = result;\n  return NextResponse.json({\n    valid: true,\n    user: {\n      id: user.id,\n      email: user.email,\n      created_at: user.created_at\n    }\n  });\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,SAAS,MAAM,CAAA,GAAA,+GAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEnD,IAAI,WAAW,QAAQ;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAO,OAAO,OAAO,KAAK;QAAC,GACpC;YAAE,QAAQ,OAAO,MAAM;QAAC;IAE5B;IAEA,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACvB,OAAO;QACP,MAAM;YACJ,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,KAAK;YACjB,YAAY,KAAK,UAAU;QAC7B;IACF;AACF","debugId":null}}]
}