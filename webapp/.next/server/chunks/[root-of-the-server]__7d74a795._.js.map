{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n\nexport const createClient = async () => {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) => {\n              cookieStore.set(name, value, options);\n            });\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    },\n  );\n};"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,MAAM,eAAe;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;oBAC/B;gBACF,EAAE,OAAO,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/utils/validation.ts"],"sourcesContent":["import { z } from 'zod';\n\n// Email validation schema\nexport const emailSchema = z\n  .string()\n  .min(1, 'Email is required')\n  .email('Invalid email format');\n\n// Password validation schema\nexport const passwordSchema = z\n  .string()\n  .min(8, 'Password must be at least 8 characters')\n  .regex(/[A-Za-z]/, 'Password must contain at least one letter');\n\n// URL validation for callbacks\nexport const urlSchema = z.string().url().refine(\n  (url) => {\n    try {\n      const urlObj = new URL(url);\n      const trustedDomains = [\n        process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',\n        // Add other trusted domains here\n      ];\n      return trustedDomains.some(domain => {\n        try {\n          return new URL(domain).origin === urlObj.origin;\n        } catch {\n          return false;\n        }\n      });\n    } catch {\n      return false;\n    }\n  },\n  { message: 'URL must be from a trusted domain' }\n);\n\n// Validate email\nexport const validateEmail = (email: string) => {\n  return emailSchema.safeParse(email);\n};\n\n// Validate password\nexport const validatePassword = (password: string) => {\n  return passwordSchema.safeParse(password);\n};\n\n// Validate URL\nexport const validateUrl = (url: string) => {\n  return urlSchema.safeParse(url);\n}; "],"names":[],"mappings":";;;;;;;;AAAA;;AAGO,MAAM,cAAc,sIAAA,CAAA,IAAC,CACzB,MAAM,GACN,GAAG,CAAC,GAAG,qBACP,KAAK,CAAC;AAGF,MAAM,iBAAiB,sIAAA,CAAA,IAAC,CAC5B,MAAM,GACN,GAAG,CAAC,GAAG,0CACP,KAAK,CAAC,YAAY;AAGd,MAAM,YAAY,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAC9C,CAAC;IACC,IAAI;QACF,MAAM,SAAS,IAAI,IAAI;QACvB,MAAM,iBAAiB;YACrB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;SAErC;QACD,OAAO,eAAe,IAAI,CAAC,CAAA;YACzB,IAAI;gBACF,OAAO,IAAI,IAAI,QAAQ,MAAM,KAAK,OAAO,MAAM;YACjD,EAAE,OAAM;gBACN,OAAO;YACT;QACF;IACF,EAAE,OAAM;QACN,OAAO;IACT;AACF,GACA;IAAE,SAAS;AAAoC;AAI1C,MAAM,gBAAgB,CAAC;IAC5B,OAAO,YAAY,SAAS,CAAC;AAC/B;AAGO,MAAM,mBAAmB,CAAC;IAC/B,OAAO,eAAe,SAAS,CAAC;AAClC;AAGO,MAAM,cAAc,CAAC;IAC1B,OAAO,UAAU,SAAS,CAAC;AAC7B","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/viettran/github/fitapp/webapp/app/api/auth/login/route.ts"],"sourcesContent":["import { createClient } from '@/utils/supabase/server';\nimport { validateEmail, validatePassword } from '@/utils/validation';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request: Request) {\n  try {\n    const { email, password } = await request.json();\n\n    // Validate email\n    const emailResult = validateEmail(email);\n    if (!emailResult.success) {\n      return NextResponse.json(\n        { error: emailResult.error.errors[0].message },\n        { status: 400 }\n      );\n    }\n\n    // Validate password\n    const passwordResult = validatePassword(password);\n    if (!passwordResult.success) {\n      return NextResponse.json(\n        { error: passwordResult.error.errors[0].message },\n        { status: 400 }\n      );\n    }\n\n    const supabase = await createClient();\n    \n    const { data, error } = await supabase.auth.signInWithPassword({\n      email: emailResult.data,\n      password: passwordResult.data,\n    });\n\n    if (error) {\n      return NextResponse.json(\n        { error: error.message },\n        { status: 400 }\n      );\n    }\n\n    // Return only necessary user data and tokens\n    return NextResponse.json({\n      message: 'Successfully signed in',\n      user: {\n        id: data.user?.id,\n        email: data.user?.email,\n        created_at: data.user?.created_at\n      },\n      access_token: data.session?.access_token,\n      refresh_token: data.session?.refresh_token\n    });\n\n  } catch (error) {\n    console.error('Login error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9C,iBAAiB;QACjB,MAAM,cAAc,CAAA,GAAA,qHAAA,CAAA,gBAAa,AAAD,EAAE;QAClC,IAAI,CAAC,YAAY,OAAO,EAAE;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;YAAC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,oBAAoB;QACpB,MAAM,iBAAiB,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;QACxC,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,eAAe,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;YAAC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;QAElC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;YAC7D,OAAO,YAAY,IAAI;YACvB,UAAU,eAAe,IAAI;QAC/B;QAEA,IAAI,OAAO;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,MAAM,OAAO;YAAC,GACvB;gBAAE,QAAQ;YAAI;QAElB;QAEA,6CAA6C;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,KAAK,IAAI,EAAE;gBAClB,YAAY,KAAK,IAAI,EAAE;YACzB;YACA,cAAc,KAAK,OAAO,EAAE;YAC5B,eAAe,KAAK,OAAO,EAAE;QAC/B;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}